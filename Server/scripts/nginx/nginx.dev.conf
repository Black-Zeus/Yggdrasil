server {
    listen 80;

    # Proxy para la ra√≠z, redirige al contenedor de frontend (React)
    location / {
        proxy_pass http://${PROJECT_NAME}-frontend:${FRONTEND_PORT_INTERNAL};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy para conecion a Base de Datos
    location /api/services/ {
        # Responder a preflight requests
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }

        rewrite ^/api/services(/.*)$ $1 break;
        proxy_pass http://${PROJECT_NAME}-backend-api:${BACKEND_API_PORT_INTERNAL};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept';
    }


    # Error logs y accesos
    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}
